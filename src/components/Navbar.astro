---
import Button from "./shared/Button.astro";


const navItems = [
  { label: "Home", href: "#hero", active: true  },
  { label: "About", href: "#about"  },
  { label: "Portfolio", href: "#porftolio" },
  { label: "Faqs", href: "#faqs" },
  { label: "Contact", href: "/contact" },
]

import en from '../i18n/messages/en.json';
import es from '../i18n/messages/es.json';

const lang = Astro.url.pathname.includes('/es') ? 'es' : 'en';
const t = lang === 'es' ? es : en;
---

<nav class="bg-white dark:bg-gray-900 fixed w-full z-20 top-0 start-0">
  <div class="max-w-screen-lg flex flex-wrap items-center justify-between mx-auto p-4">
  <a href="https://flowbite.com/" data-collapse-toggle="navbar-default" class="flex items-center space-x-3 rtl:space-x-reverse md:text-2xl font-main">
    Gabriela Villegas
  </a>
  <div class="flex md:order-2 space-x-3 md:space-x-0 rtl:space-x-reverse">
    <Button href="#" label="Book now" variant="primary" />

      <button data-collapse-toggle="navbar-sticky" type="button" class="inline-flex items-center p-2 w-10 h-10 justify-center text-sm text-gray-500 rounded-lg md:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600" aria-controls="navbar-sticky" aria-expanded="false">
        <span class="sr-only">Open main menu</span>
        <svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 17 14">
            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 1h15M1 7h15M1 13h15"/>
        </svg>
    </button>
      <button data-dropdown-toggle="language-dropdown-menu" class="inline-flex items-center font-medium justify-center px-4 py-2 text-sm text-gray-900 dark:text-white rounded-lg cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-700">
        {lang.toUpperCase()}
      </button>
  </div>
  <div class="items-center justify-between hidden w-full md:flex md:w-auto md:order-1" id="navbar-sticky">
    <ul class="flex flex-col p-4 md:p-0 mt-4 font-medium rounded-lg bg-gray-50 md:space-x-8 rtl:space-x-reverse md:flex-row md:mt-0 md:border-0 md:bg-white dark:bg-gray-800 md:dark:bg-gray-900 dark:border-gray-700">
      {navItems.map(({label, href, active}) =>(
        <li>
          <a class={`block py-2 px-3 rounded-sm md:p-0 my-2 ${active ? "text-white bg-accent  md:bg-transparent md:text-accent md:dark:text-blue-500" : "hover:bg-gray-100 md:hover:bg-transparent md:hover:text-accent md:p-0 md:dark:hover:text-blue-500 dark:text-white dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent dark:border-gray-700" }`} href={href} aria-current={active ? "page" : undefined}>{label}</a>
        </li>
      ))}

    </ul>
  </div>
  </div>
</nav>

  <!-- Dropdown -->
  <div id="language-dropdown-menu" class="z-50 hidden my-4 text-base list-none bg-white divide-y divide-gray-100 rounded-lg shadow dark:bg-gray-700">
    <ul class="py-2" role="none">
      <li>
        <a href="/en" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-600">English</a>
      </li>
      <li>
        <a href="/es" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-600">Español</a>
      </li>
    </ul>
  </div>

<script>
document.addEventListener('DOMContentLoaded', () => {
  const toggleButton = document.querySelector('[data-collapse-toggle="navbar-sticky"]') as HTMLButtonElement | null;
  const menu = document.getElementById('navbar-sticky');
  const navLinks = document.querySelectorAll('#navbar-sticky a[href^="#"], #navbar-sticky a[href^="/"]');

  // Cerrar al hacer click en un enlace del menú
  navLinks.forEach(link => {
    link.addEventListener('click', () => {
      if (
        window.innerWidth < 768 &&
        toggleButton &&
        toggleButton.getAttribute('aria-expanded') === 'true'
      ) {
        toggleButton.click();
      }
    });
  });

  // Cerrar al hacer click fuera del menú
  document.addEventListener('click', (event) => {
    const target = event.target as Node;

    if (
      window.innerWidth < 768 &&
      toggleButton &&
      menu &&
      toggleButton.getAttribute('aria-expanded') === 'true' &&
      !menu.contains(target) &&
      !toggleButton.contains(target)
    ) {
      toggleButton.click();
    }
  });
});


</script>
